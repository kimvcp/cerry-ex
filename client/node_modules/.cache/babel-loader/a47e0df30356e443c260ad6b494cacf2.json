{"ast":null,"code":"import _objectSpread from \"/Users/kimvcp/Documents/workspace/reactJs/cerry-express/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/kimvcp/Documents/workspace/reactJs/cerry-express/client/src/context.js\";\nimport React, { Component } from 'react';\nimport items from './data';\nconst RoomContext = React.createContext(); // <RoomContext.Provider value={'hello'}\n\nclass RoomProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rooms: [],\n      sortedRooms: [],\n      featuredRooms: [],\n      loading: true,\n      type: 'all',\n      capacity: 1,\n      price: 0,\n      minPrice: 0,\n      maxPrice: 0,\n      minSize: 0,\n      maxSize: 0,\n      breakfast: false,\n      pets: false\n    };\n\n    this.getRoom = slug => {\n      let tempRooms = [...this.state.rooms];\n      const room = tempRooms.find(room => room.slug === slug);\n      return room;\n    };\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = event.type === \"checkbox\" ? target.checked : target.value;\n      const name = event.target.name;\n      this.setState({\n        [name]: value\n      }, this.filterRooms);\n    };\n\n    this.filterRooms = () => {\n      let _this$state = this.state,\n          rooms = _this$state.rooms,\n          type = _this$state.type,\n          capacity = _this$state.capacity,\n          price = _this$state.price,\n          minSize = _this$state.minSize,\n          maxSize = _this$state.maxSize,\n          breakfast = _this$state.breakfast,\n          pets = _this$state.pets;\n      let tempRooms = [...rooms];\n\n      if (type !== 'all') {\n        tempRooms = tempRooms.filter(room => room.type === type);\n      }\n\n      this.setState({\n        sortedRooms: tempRooms\n      });\n    };\n  }\n\n  // getData\n  componentDidMount() {\n    let rooms = this.formatData(items);\n    let featuredRooms = rooms.filter(room => room.featured === true);\n    let maxPrice = Math.max(...rooms.map(item => item.price));\n    let maxSize = Math.max(...rooms.map(item => item.size));\n    this.setState({\n      rooms,\n      featuredRooms,\n      sortedRooms: rooms,\n      loading: false,\n      price: maxPrice,\n      maxPrice,\n      maxSize\n    });\n  }\n\n  formatData(items) {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image => image.fields.file.url);\n\n      let rooms = _objectSpread({}, item.fields, {\n        images,\n        id\n      });\n\n      return rooms;\n    });\n    return tempItems;\n  }\n\n  render() {\n    return React.createElement(RoomContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        getRoom: this.getRoom\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst RoomConsumer = RoomContext.Consumer;\nexport function withRoomConsumer(Conponent) {\n  return function ConsumerWrapper(props) {\n    return React.createElement(RoomConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, value => React.createElement(Component, Object.assign({}, props, {\n      context: value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })));\n  };\n}\n;\nexport { RoomProvider, RoomConsumer, RoomContext };","map":{"version":3,"sources":["/Users/kimvcp/Documents/workspace/reactJs/cerry-express/client/src/context.js"],"names":["React","Component","items","RoomContext","createContext","RoomProvider","state","rooms","sortedRooms","featuredRooms","loading","type","capacity","price","minPrice","maxPrice","minSize","maxSize","breakfast","pets","getRoom","slug","tempRooms","room","find","handleChange","event","target","value","checked","name","setState","filterRooms","filter","componentDidMount","formatData","featured","Math","max","map","item","size","tempItems","id","sys","images","fields","image","file","url","render","props","children","RoomConsumer","Consumer","withRoomConsumer","Conponent","ConsumerWrapper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport items from './data'\n\nconst RoomContext = React.createContext();\n// <RoomContext.Provider value={'hello'}\n\nclass RoomProvider extends Component {\n  state={\n    rooms: [],\n    sortedRooms: [],\n    featuredRooms: [],\n    loading: true,\n    type:'all',\n    capacity:1,\n    price:0,\n    minPrice:0,\n    maxPrice:0,\n    minSize:0,\n    maxSize:0,\n    breakfast:false,\n    pets:false\n  };\n  // getData\n\n  componentDidMount(){\n    let rooms = this.formatData(items)\n    let featuredRooms = rooms.filter(room => room.featured === true);\n    let maxPrice = Math.max(...rooms.map(item => item.price))\n    let maxSize = Math.max(...rooms.map(item => item.size))\n\n    this.setState({\n      rooms,\n      featuredRooms, \n      sortedRooms:rooms, \n      loading:false,\n      price: maxPrice,\n      maxPrice,\n      maxSize,\n\n    });\n  }\n\n  formatData(items){\n    let tempItems = items.map(item => {\n      let id = item.sys.id\n      let images = item.fields.images.map(image => image.fields.file.url);\n      let rooms = {...item.fields, images,id}\n      return rooms;\n    })\n    return tempItems;\n  }\n\n  getRoom = (slug) => {\n    let tempRooms = [...this.state.rooms]\n    const room = tempRooms.find(room => room.slug===slug);\n    return room;\n  }\n  handleChange = event => {\n    const target = event.target\n    const value = event.type === \"checkbox\" ? target.checked:target.value\n    const name = event.target.name\n    this.setState({\n      [name]: value\n    },this.filterRooms)\n  }\n  filterRooms = () => {\n    let{\n      rooms,type,capacity,price,minSize,maxSize,breakfast,pets\n    } = this.state\n    let tempRooms = [...rooms];\n    if(type !== 'all'){\n      tempRooms = tempRooms.filter(room => room.type === type)\n    }\n    this.setState({\n      sortedRooms: tempRooms\n    })\n  }\n\n  render() {\n    return (\n      <RoomContext.Provider value={{...this.state, getRoom:this.getRoom}}>\n      {this.props.children}\n      </RoomContext.Provider>\n    )\n  }\n}\n\nconst RoomConsumer = RoomContext.Consumer;\n\nexport function withRoomConsumer(Conponent){\n  return function ConsumerWrapper(props){\n    return <RoomConsumer>\n      {value => <Component {...props} context={value}/>}\n    </RoomConsumer>\n  };\n};\n\nexport {RoomProvider, RoomConsumer, RoomContext};"]},"metadata":{},"sourceType":"module"}